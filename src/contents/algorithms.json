[
  {
    "title": "Dynamic Programming Overview",
    "path": "articles/articles/algorithms/dynamic_programming",
    "description": "Overview of Dynamic Programming"
  },
  {
    "title": " 0/1 Knapsack Problem Explained with 1D & 2D Dynamic Programming",
    "path": "articles/articles/algorithms/dp_knapsack",
    "description": "Maximize value with a limited weight budget using both 1D space-optimized and 2D tabulation approaches"
  },
  {
    "title": "Longest Increasing Subsequence (LIS) using DP",
    "path": "articles/articles/algorithms/dp_lis",
    "description": "Identify the longest ordered subsequence in an array with classic DP techniques"
  },
  {
    "title": "Longest Common Subsequence (LCS) with Dynamic Programming",
    "path": "articles/articles/algorithms/dp_lcs",
    "description": "Find the length of the longest subsequence common to two strings using 2D tabulation"
  },
  {
    "title": "Fibonacci Numbers with Dynamic Programming",
    "path": "articles/articles/algorithms/dp_fibonacci",
    "description": "Efficiently generate Fibonacci sequences using recursion, memoization, and bottom-up DP"
  },
  {
    "title": "Segment Tree",
    "path": "articles/articles/algorithms/segment_tree",
    "description": "Finding max, min, sum, and gcd in array updated dynamically"
  },
  {
    "title": "Perfect Number",
    "path": "articles/articles/algorithms/perfect_number",
    "description": "The art of Perfect Number"
  },
  {
    "title": "Binary Search",
    "path": "articles/articles/algorithms/binary_search",
    "description": "Explanation of the binary search algorithm"
  },
  {
    "title": "Power",
    "path": "articles/articles/algorithms/power",
    "description": "Efficient power function using recursion"
  },
  {
    "title": "Greatest Common Divisor",
    "path": "articles/articles/algorithms/gcd",
    "description": "Find GCD using recursion"
  }
]